Today class, we will learn about encapsulation.

Data becomes "encapsulated" when we have the private scope
variable applied. That means it's trapped within the class.

The only way to access private variables is via these so-called
"set" and "get" methods. They are aptly named, as you are soon
to find.

Set methods take any number of arguments as parameters, and store
that information into an object... from my understanding.

As an example, let's say we have a class that is for employees.
We would need to set the employee name (as a string, but of course)
as well as their salary (as some numeric datatype).

So in our "class file," ... <==========
=====> a.k.a. not our "driver class file" containing
       our public static void main...

Get methods' sole purpose is to RETURN whatever data has been set.

Are these useful? Not necessarily. I figure set methods are more
useful than get methods, as get methods almost function similarly
to the ever-famous "debugging print".

The textbook has a great visual diagram of what I mean by 
"encapsulation". I'll give you the page number when I actually
care to find it. I'm too busy getting caught up in calculus.

It is easy to know what the difference between set and get methods.
Set methods require a parameter, or an argument. We still don't know
the difference yet.

so the syntax;

public void set(varName){
  this.variable = varName;
}

there you go. It sets a class variable.
the (varName) in parenthesis requires a datatype.
Otherwise, Java with Ant will throw a fit.
Other JDKs like maven and gradle don't care.
But this is a difficult course that requires
a conceptual understanding of what we are
doing with Object Oriented Programming.

Here is the difference between Set and Get methods.
A GET method simply returns one of these so-called
"encapsulated" variables. Yeah, I know. I'm sick
of computer science terms too.

here is the syntax for get methods.

public [dataType] get((varName))(){
  return this.varName;
}

where [dataType] is the type of the return
variable, and the varName is the private 
variable we have previously established.
and the ((varName)) is a better way of 
writing your code so you know which
value or whatever you're getting.
We'll get into more later.
Just know GET METHODS are important.
GET METHODS RETURN.
GET METHODS RETURN.

Good Luck fellow Java users.
This language is dying.
So am I. Quicker than you.
