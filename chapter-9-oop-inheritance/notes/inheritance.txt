---   UNDER CONSTRUCTION   ---
So, today class, we are going to discuss INHERITANCE.
This is an extremely important concept in object-oriented
programming. It is one of the four pillars of OOP...

Inheritance is the ability of a class to copy the 
behavior of another class. There is plenty of vocabulary
that comes along with this novel concept.

Superclass: A class that "donates" attributes and methods.
Subclass: The class that actually does the inheriting of
          pre-existing attributes and methods.
Base Class: Another name for a superclass, usually in a
          C++ context.
Derived Class: Another name for a subclass, usually in a
          C++ context.
Specialization: Another name for the concept of inheritance,
          the subclass exhibits behaviors of its superclass
          and can modify those behaviors to be more tailored
          to objects of the subclass.

All classes in Java extend class Object. This means that
EVERYTHING in Java is an object. This also means that class
Object is at the top of the so-called class hierarchy. The 
operation of:

public class ClassName extends Object

is done implicitly upon creation or instantiation of a class. So,
in essence, it is not worth the keystrokes to write out "extends
Object."

Java (for this chapter, more on this later) only supports single
inheritance, that is, one subclass inherits all attributes and
methods from a single superclass. Keeps things simple for now :)

This chapter strongly encourages you to write out class hierarchy
diagrams. However, if you have a grasp on the concept of inheritance,
this may not be worth your time. UML is kind of, unfortunately, a
relic of the past. Here's a general inheritance diagram.

The direction of the caret character "^", greater than character ">",
and less than character "<" shows which class extends which. 

   class Truck > class Car > class Vehicle < class Bicycle < class MotorCycle
                    ^              ^
              class Hybrid    class Train < class MagLev
                                   ^
                              class SteamTrain
And so on and so on.

The general rule of thumb is that Superclasses (base classes) are
more generalized and simplified, while the Subclasses become more
specific for each object.

          ~~~   gray-wave life lore   ~~~
I don't know what I did, but I messed up my ankle real bad.
If you see me limping... you know why. The pain has only gotten
progressively worse over the past three days. 
